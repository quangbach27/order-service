name: Commit Stage
on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: quangbach27/order-service
  VERSION: ${{ github.sha }}

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-22.04
    timeout-minutes: 15

    permissions:
      contents: read

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      - name: Build, unit tests and integration tests
        run: ./mvnw clean verify

      - name: Setup tools
        uses: alexellis/setup-arkade@v3

      - name: Install tools
        uses: alexellis/arkade-get@master
        with:
          kubeconform: latest

      - name: Validate Kubernetes manifests
        run: |
          kubeconform --strict k8s

      - name: Cache Maven artifacts
        uses: actions/upload-artifact@v4
        with:
          name: maven-artifacts
          path: target/
  package:
    name: Package and Publish
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [build]
    runs-on: ubuntu-22.04
    timeout-minutes: 15

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Download Maven artifacts
        uses: actions/download-artifact@v4
        with:
          name: maven-artifacts
          path: target/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: Log into container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and publish container image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
